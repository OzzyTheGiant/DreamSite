---
import i18next, { t } from "i18next"
import { type MapLocation } from "@/store/locations"
import Header from "@/components/Header.svelte"
import { switchSiteLanguage } from "@/services/i18n"
import Footer from "@/components/Footer.svelte"
import MapView from "@/components/Map.svelte"
import Notification from "@/components/Notification.svelte"
import { type LinkGroup } from "@/components/Footer.svelte"
import "highlight.js/styles/shades-of-purple.min.css"

interface Props {
  title: string
  description: string
  meta?: { name?: string, property?: string, content: any }[]
}

const { title, description, meta } = Astro.props;

const navLinks = {
  [t("header.about.link")]: t("header.about.text"),
  [t("header.articles.link")]: t("header.articles.text"),
  [t("header.contact.link")]: t("header.contact.text"),
  [t("header.shop.link")]: t("header.shop.text"),
  [t("header.cart.link")]: "cart"
}

const linkGroups: LinkGroup[] = [
  {
    name: "Links",
    list: navLinks
  }
]

const locations: { [key: string]: MapLocation } = {
  harlingen: {
    coordinates: [26.169884, -98.013546],
    address: {
      street: "1327 E Washington Ave #203",
      cityLine: "Harlingen, TX 78550",
      phone: "(956) 241-0157"
    }
  }
}

await switchSiteLanguage(Astro.url)
---

<!doctype html>
<html lang={i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || "Website by DreamCraft"}/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="generator" content={Astro.generator}/>
    {meta && meta.map(item => <meta name={item.name} content={item.content}/>)}
    <!-- <meta http-equiv="refresh" content="0;url=/en/"/> -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link crossorigin rel="preconnect" href="https://fonts.gstatic.com">
    <link 
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:opsz,wght@6..12,700&family=Source+Sans+3:ital,wght@0,400;0,700;1,400&display=swap"/>
    <link
      crossorigin
      rel="stylesheet",
      href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css",
      integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="/>
    <title>{title + t("home.title")}</title>
  </head>
  <body class="dark:bg-neutral-900">
    <Header hasDarkModeButton hasCart client:load links={navLinks}/>
    <slot/>
    <Footer
      type="socialmedia"
      hasIcons={false}
      description={t("footer.description")}
      siteName={import.meta.env.PUBLIC_SITE_NAME}
      {linkGroups}>
      <MapView client:only {locations} slot="map" mapClass="h-48 col-span-2"/>
    </Footer>

    <Notification client:load/>
  </body>
</html>

<script>
import { $notification } from "@/store/notification"

let notification = window.sessionStorage.getItem("dreamsite.notification");
$notification.set(notification ? JSON.parse(notification) : null)
window.sessionStorage.removeItem("dreamsite.notification")

document.querySelector("html")?.classList.toggle("dark")
</script>

<style is:global lang="postcss">
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  html * {
    @apply font-main;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-headings;
  }

  p, span {
    @apply text-gray-600;
  }

  pre, code, pre *, code * {
    font-family:
      JetBrains Mono,
      Fira Code,
      Roboto Mono,
      DejaVu Sans Mono,
      Menlo,
      Monaco,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace
      !important;
  }

  code * {
    color: inherit
  }

  button[type="submit"], button[type="button"], a[class*="bg"], nav ul li a {
    @apply font-bold;
  }

  pre {
    @apply p-4;
  }

  table {
    @apply w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400;
  }

  thead {
    @apply text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400;
  }

  tbody tr {
    @apply bg-white dark:bg-gray-800;
  }

  tbody tr:not(:last-child) {
    @apply border-b dark:border-gray-700;
  }

  th {
    @apply px-6 py-3;
  }

  td {
    @apply px-6 py-4
  }

  /** Markdown math equations. Do note that there is an additional .katex-html element out there */
  .katex-mathml, math {
    @apply bg-primary-200 dark:bg-primary-900 text-gray-800;
    @apply dark:text-gray-300 !important;
  }

  math {
    @apply px-1;
  }

  .katex-display math {
    @apply px-1 py-1;
  }

  .katex-html {
    @apply hidden;
  }
</style>
